# issue #2567: misplaced comments
# script 2567-misplaced-comments-plus.txtar
# state with change-1173870 @mvdan's WIP on gerrit
# the .got.cue files show the bad result of cue fmt

exec cue-ast-print 2567.cue
cmp stdout 2567.ast
exec cue fmt 2567.cue
cmp 2567.cue 2567.got.cue
! exec cue vet 2567.cue         # result fails the cue vet

exec cue-ast-print 2567a.cue
cmp stdout 2567a.ast
exec cue fmt 2567a.cue
cmp 2567a.cue 2567a.got.cue
! exec cue vet 2567a.cue         # result fails the cue vet

exec cue-ast-print 2567.barbie.cue
cmp stdout 2567.barbie.ast
exec cue fmt 2567.barbie.cue
cmp 2567.barbie.cue 2567.barbie.got.cue
! exec cue vet 2567.barbie.cue         # result fails the cue vet

exec cue-ast-print 2567.1.2.3.cue
cmp stdout 2567.1.2.3.ast
exec cue fmt 2567.1.2.3.cue
cmp 2567.1.2.3.cue 2567.1.2.3.got.cue
exec cue vet 2567.1.2.3.cue     # result passes the cue vet, but 2 comments are misplaced

-- 2567.cue --
foo: [
    bar["baz"], //some comment
]
bar: baz: 41
-- 2567.got.cue --
foo: [
	bar["baz" //some comment
	],
]
bar: baz: 41
-- 2567.ast --
*ast.File{
. Filename: "2567.cue"
. Decls: []ast.Decl{
. . *ast.Field{
. . . Label: *ast.Ident{
. . . . NamePos: token.Pos("2567.cue:1:1")
. . . . Name: "foo"
. . . }
. . . Optional: token.Pos("-")
. . . Constraint: token.Token("ILLEGAL")
. . . TokenPos: token.Pos("2567.cue:1:4")
. . . Token: token.Token(":")
. . . Value: *ast.ListLit{
. . . . Lbrack: token.Pos("2567.cue:1:6")
. . . . Elts: []ast.Expr{
. . . . . *ast.IndexExpr{
. . . . . . X: *ast.Ident{
. . . . . . . NamePos: token.Pos("2567.cue:2:5")
. . . . . . . Name: "bar"
. . . . . . }
. . . . . . Lbrack: token.Pos("2567.cue:2:8")
. . . . . . Index: *ast.BasicLit{
. . . . . . . ValuePos: token.Pos("2567.cue:2:9")
. . . . . . . Kind: token.Token("STRING")
. . . . . . . Value: "\"baz\""
. . . . . . }
. . . . . . Rbrack: token.Pos("2567.cue:2:14")
. . . . . . Comments: []*ast.CommentGroup{
. . . . . . . *ast.CommentGroup{
. . . . . . . . Doc: false
. . . . . . . . Line: true
. . . . . . . . Position: 3
. . . . . . . . List: []*ast.Comment{
. . . . . . . . . *ast.Comment{
. . . . . . . . . . Slash: token.Pos("2567.cue:2:17")
. . . . . . . . . . Text: "//some comment"
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . }
. . . . . }
. . . . }
. . . . Rbrack: token.Pos("2567.cue:3:1")
. . . }
. . . Attrs: []*ast.Attribute{
. . . }
. . }
. . *ast.Field{
. . . Label: *ast.Ident{
. . . . NamePos: token.Pos("2567.cue:4:1")
. . . . Name: "bar"
. . . }
. . . Optional: token.Pos("-")
. . . Constraint: token.Token("ILLEGAL")
. . . TokenPos: token.Pos("2567.cue:4:4")
. . . Token: token.Token(":")
. . . Value: *ast.StructLit{
. . . . Lbrace: token.Pos("-")
. . . . Elts: []ast.Decl{
. . . . . *ast.Field{
. . . . . . Label: *ast.Ident{
. . . . . . . NamePos: token.Pos("2567.cue:4:6")
. . . . . . . Name: "baz"
. . . . . . }
. . . . . . Optional: token.Pos("-")
. . . . . . Constraint: token.Token("ILLEGAL")
. . . . . . TokenPos: token.Pos("2567.cue:4:9")
. . . . . . Token: token.Token(":")
. . . . . . Value: *ast.BasicLit{
. . . . . . . ValuePos: token.Pos("2567.cue:4:11")
. . . . . . . Kind: token.Token("INT")
. . . . . . . Value: "41"
. . . . . . }
. . . . . . Attrs: []*ast.Attribute{
. . . . . . }
. . . . . }
. . . . }
. . . . Rbrace: token.Pos("-")
. . . }
. . . Attrs: []*ast.Attribute{
. . . }
. . }
. }
. Imports: []*ast.ImportSpec{
. }
}
-- 2567a.cue --
foo: [
    bar[baz], //some comment
]
baz: 41
-- 2567a.got.cue --
foo: [
	bar[baz //some comment
	],
]
baz: 41
-- 2567a.ast --
*ast.File{
. Filename: "2567a.cue"
. Decls: []ast.Decl{
. . *ast.Field{
. . . Label: *ast.Ident{
. . . . NamePos: token.Pos("2567a.cue:1:1")
. . . . Name: "foo"
. . . }
. . . Optional: token.Pos("-")
. . . Constraint: token.Token("ILLEGAL")
. . . TokenPos: token.Pos("2567a.cue:1:4")
. . . Token: token.Token(":")
. . . Value: *ast.ListLit{
. . . . Lbrack: token.Pos("2567a.cue:1:6")
. . . . Elts: []ast.Expr{
. . . . . *ast.IndexExpr{
. . . . . . X: *ast.Ident{
. . . . . . . NamePos: token.Pos("2567a.cue:2:5")
. . . . . . . Name: "bar"
. . . . . . }
. . . . . . Lbrack: token.Pos("2567a.cue:2:8")
. . . . . . Index: *ast.Ident{
. . . . . . . NamePos: token.Pos("2567a.cue:2:9")
. . . . . . . Name: "baz"
. . . . . . }
. . . . . . Rbrack: token.Pos("2567a.cue:2:12")
. . . . . . Comments: []*ast.CommentGroup{
. . . . . . . *ast.CommentGroup{
. . . . . . . . Doc: false
. . . . . . . . Line: true
. . . . . . . . Position: 3
. . . . . . . . List: []*ast.Comment{
. . . . . . . . . *ast.Comment{
. . . . . . . . . . Slash: token.Pos("2567a.cue:2:15")
. . . . . . . . . . Text: "//some comment"
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . }
. . . . . }
. . . . }
. . . . Rbrack: token.Pos("2567a.cue:3:1")
. . . }
. . . Attrs: []*ast.Attribute{
. . . }
. . }
. . *ast.Field{
. . . Label: *ast.Ident{
. . . . NamePos: token.Pos("2567a.cue:4:1")
. . . . Name: "baz"
. . . }
. . . Optional: token.Pos("-")
. . . Constraint: token.Token("ILLEGAL")
. . . TokenPos: token.Pos("2567a.cue:4:4")
. . . Token: token.Token(":")
. . . Value: *ast.BasicLit{
. . . . ValuePos: token.Pos("2567a.cue:4:6")
. . . . Kind: token.Token("INT")
. . . . Value: "41"
. . . }
. . . Attrs: []*ast.Attribute{
. . . }
. . }
. }
. Imports: []*ast.ImportSpec{
. }
}
-- 2567.barbie.cue --
foo: [
    bar["baz"], // about bar+baz list elt
    barbie["baz"], // about barbie+baz list elt
]
bar: baz: 41
barbie: baz: 41
-- 2567.barbie.got.cue --
foo: [
	bar["baz" // about bar+baz list elt
	],
	barbie["baz" // about barbie+baz list elt
	],
]
bar: baz:    41
barbie: baz: 41
-- 2567.barbie.ast --
*ast.File{
. Filename: "2567.barbie.cue"
. Decls: []ast.Decl{
. . *ast.Field{
. . . Label: *ast.Ident{
. . . . NamePos: token.Pos("2567.barbie.cue:1:1")
. . . . Name: "foo"
. . . }
. . . Optional: token.Pos("-")
. . . Constraint: token.Token("ILLEGAL")
. . . TokenPos: token.Pos("2567.barbie.cue:1:4")
. . . Token: token.Token(":")
. . . Value: *ast.ListLit{
. . . . Lbrack: token.Pos("2567.barbie.cue:1:6")
. . . . Elts: []ast.Expr{
. . . . . *ast.IndexExpr{
. . . . . . X: *ast.Ident{
. . . . . . . NamePos: token.Pos("2567.barbie.cue:2:5")
. . . . . . . Name: "bar"
. . . . . . }
. . . . . . Lbrack: token.Pos("2567.barbie.cue:2:8")
. . . . . . Index: *ast.BasicLit{
. . . . . . . ValuePos: token.Pos("2567.barbie.cue:2:9")
. . . . . . . Kind: token.Token("STRING")
. . . . . . . Value: "\"baz\""
. . . . . . }
. . . . . . Rbrack: token.Pos("2567.barbie.cue:2:14")
. . . . . . Comments: []*ast.CommentGroup{
. . . . . . . *ast.CommentGroup{
. . . . . . . . Doc: false
. . . . . . . . Line: true
. . . . . . . . Position: 3
. . . . . . . . List: []*ast.Comment{
. . . . . . . . . *ast.Comment{
. . . . . . . . . . Slash: token.Pos("2567.barbie.cue:2:17")
. . . . . . . . . . Text: "// about bar+baz list elt"
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . }
. . . . . }
. . . . . *ast.IndexExpr{
. . . . . . X: *ast.Ident{
. . . . . . . NamePos: token.Pos("2567.barbie.cue:3:5")
. . . . . . . Name: "barbie"
. . . . . . }
. . . . . . Lbrack: token.Pos("2567.barbie.cue:3:11")
. . . . . . Index: *ast.BasicLit{
. . . . . . . ValuePos: token.Pos("2567.barbie.cue:3:12")
. . . . . . . Kind: token.Token("STRING")
. . . . . . . Value: "\"baz\""
. . . . . . }
. . . . . . Rbrack: token.Pos("2567.barbie.cue:3:17")
. . . . . . Comments: []*ast.CommentGroup{
. . . . . . . *ast.CommentGroup{
. . . . . . . . Doc: false
. . . . . . . . Line: true
. . . . . . . . Position: 3
. . . . . . . . List: []*ast.Comment{
. . . . . . . . . *ast.Comment{
. . . . . . . . . . Slash: token.Pos("2567.barbie.cue:3:20")
. . . . . . . . . . Text: "// about barbie+baz list elt"
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . }
. . . . . }
. . . . }
. . . . Rbrack: token.Pos("2567.barbie.cue:4:1")
. . . }
. . . Attrs: []*ast.Attribute{
. . . }
. . }
. . *ast.Field{
. . . Label: *ast.Ident{
. . . . NamePos: token.Pos("2567.barbie.cue:5:1")
. . . . Name: "bar"
. . . }
. . . Optional: token.Pos("-")
. . . Constraint: token.Token("ILLEGAL")
. . . TokenPos: token.Pos("2567.barbie.cue:5:4")
. . . Token: token.Token(":")
. . . Value: *ast.StructLit{
. . . . Lbrace: token.Pos("-")
. . . . Elts: []ast.Decl{
. . . . . *ast.Field{
. . . . . . Label: *ast.Ident{
. . . . . . . NamePos: token.Pos("2567.barbie.cue:5:6")
. . . . . . . Name: "baz"
. . . . . . }
. . . . . . Optional: token.Pos("-")
. . . . . . Constraint: token.Token("ILLEGAL")
. . . . . . TokenPos: token.Pos("2567.barbie.cue:5:9")
. . . . . . Token: token.Token(":")
. . . . . . Value: *ast.BasicLit{
. . . . . . . ValuePos: token.Pos("2567.barbie.cue:5:11")
. . . . . . . Kind: token.Token("INT")
. . . . . . . Value: "41"
. . . . . . }
. . . . . . Attrs: []*ast.Attribute{
. . . . . . }
. . . . . }
. . . . }
. . . . Rbrace: token.Pos("-")
. . . }
. . . Attrs: []*ast.Attribute{
. . . }
. . }
. . *ast.Field{
. . . Label: *ast.Ident{
. . . . NamePos: token.Pos("2567.barbie.cue:6:1")
. . . . Name: "barbie"
. . . }
. . . Optional: token.Pos("-")
. . . Constraint: token.Token("ILLEGAL")
. . . TokenPos: token.Pos("2567.barbie.cue:6:7")
. . . Token: token.Token(":")
. . . Value: *ast.StructLit{
. . . . Lbrace: token.Pos("-")
. . . . Elts: []ast.Decl{
. . . . . *ast.Field{
. . . . . . Label: *ast.Ident{
. . . . . . . NamePos: token.Pos("2567.barbie.cue:6:9")
. . . . . . . Name: "baz"
. . . . . . }
. . . . . . Optional: token.Pos("-")
. . . . . . Constraint: token.Token("ILLEGAL")
. . . . . . TokenPos: token.Pos("2567.barbie.cue:6:12")
. . . . . . Token: token.Token(":")
. . . . . . Value: *ast.BasicLit{
. . . . . . . ValuePos: token.Pos("2567.barbie.cue:6:14")
. . . . . . . Kind: token.Token("INT")
. . . . . . . Value: "41"
. . . . . . }
. . . . . . Attrs: []*ast.Attribute{
. . . . . . }
. . . . . }
. . . . }
. . . . Rbrace: token.Pos("-")
. . . }
. . . Attrs: []*ast.Attribute{
. . . }
. . }
. }
. Imports: []*ast.ImportSpec{
. }
}
-- 2567.1.2.3.cue --
[
    // about this clause
    if true // about this condition
        {} // about this value
]
-- 2567.1.2.3.got.cue --
[
	// about this clause
	if true {} // about this condition,
	// about this value
]
-- 2567.1.2.3.ast --
*ast.File{
. Filename: "2567.1.2.3.cue"
. Decls: []ast.Decl{
. . *ast.EmbedDecl{
. . . Expr: *ast.ListLit{
. . . . Lbrack: token.Pos("2567.1.2.3.cue:1:1")
. . . . Elts: []ast.Expr{
. . . . . *ast.Comprehension{
. . . . . . Clauses: []ast.Clause{
. . . . . . . *ast.IfClause{
. . . . . . . . If: token.Pos("2567.1.2.3.cue:3:5")
. . . . . . . . Condition: *ast.BasicLit{
. . . . . . . . . ValuePos: token.Pos("2567.1.2.3.cue:3:8")
. . . . . . . . . Kind: token.Token("true")
. . . . . . . . . Value: "true"
. . . . . . . . }
. . . . . . . }
. . . . . . }
. . . . . . Value: *ast.StructLit{
. . . . . . . Lbrace: token.Pos("2567.1.2.3.cue:4:9")
. . . . . . . Elts: []ast.Decl{
. . . . . . . }
. . . . . . . Rbrace: token.Pos("2567.1.2.3.cue:4:10")
. . . . . . }
. . . . . . Comments: []*ast.CommentGroup{
. . . . . . . *ast.CommentGroup{
. . . . . . . . Doc: true
. . . . . . . . Line: false
. . . . . . . . Position: 0
. . . . . . . . List: []*ast.Comment{
. . . . . . . . . *ast.Comment{
. . . . . . . . . . Slash: token.Pos("2567.1.2.3.cue:2:5")
. . . . . . . . . . Text: "// about this clause"
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . . *ast.CommentGroup{
. . . . . . . . Doc: false
. . . . . . . . Line: true
. . . . . . . . Position: 2
. . . . . . . . List: []*ast.Comment{
. . . . . . . . . *ast.Comment{
. . . . . . . . . . Slash: token.Pos("2567.1.2.3.cue:3:13")
. . . . . . . . . . Text: "// about this condition"
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . . *ast.CommentGroup{
. . . . . . . . Doc: false
. . . . . . . . Line: true
. . . . . . . . Position: 4
. . . . . . . . List: []*ast.Comment{
. . . . . . . . . *ast.Comment{
. . . . . . . . . . Slash: token.Pos("2567.1.2.3.cue:4:12")
. . . . . . . . . . Text: "// about this value"
. . . . . . . . . }
. . . . . . . . }
. . . . . . . }
. . . . . . }
. . . . . }
. . . . }
. . . . Rbrack: token.Pos("2567.1.2.3.cue:5:1")
. . . }
. . }
. }
. Imports: []*ast.ImportSpec{
. }
}
-- end --
